import { type GetServerSidePropsContext } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";

import { api } from "@/utils/api";
import getSSRHelper from "@/server/api/getSSRHelper";

import Layout from "@/components/layouts/Layout";
import UserHeader from "@/components/pages/user-page/UserHeader";
import CardColumnsContainer from "@/components/cards-column/CardColumnsContainer";
import UserPosts from "@/components/pages/user-page/UserPosts";
import UserBookmarks from "@/components/pages/user-page/UserBookmarks";
import Link from "next/link";
import UserTab from "@/components/pages/user-page/UserTab";

interface Props {
  name: string;
  isBookmarkPage: boolean;
}

export const getServerSideProps = async (
  ctx: GetServerSidePropsContext<{ slug: string[] }>
) => {
  const name = ctx.params?.slug[0] as string;
  const isBookmarkPage = ctx.params?.slug[1] === "bookmarks";

  const helper = await getSSRHelper(ctx);
  await helper.user.getByName.prefetch(name);

  return {
    props: {
      trpcState: helper.dehydrate(),
      name,
      isBookmarkPage,
    },
  };
};

const UserPage = ({ name, isBookmarkPage }: Props) => {
  const userQuery = api.user.getByName.useQuery(name);
  const { status, data: session } = useSession();

  return (
    <>
      <Head>
        <title>Pictures</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <main>
          {userQuery.data && (
            <UserHeader
              userImage={userQuery.data?.image || ""}
              userName={userQuery.data?.name || ""}
              userBio={userQuery.data?.bio}
              userId={userQuery.data.id}
              sessionStatus={status}
              session={session}
            />
          )}

          {userQuery.data ? (
            <div className="container mx-auto mt-4">
              <div className="mb-4 flex gap-4">
                <UserTab href={`/user/${name}`}>Posts</UserTab>

                <UserTab href={`/user/${name}/bookmarks`}>Bookmarks</UserTab>
              </div>

              {!isBookmarkPage ? (
                <UserPosts userName={name} />
              ) : (
                <UserBookmarks userName={name} />
              )}
            </div>
          ) : (
            <p className="pt-4 text-center italic text-zinc-500">
              This user not exist
            </p>
          )}
        </main>
      </Layout>
    </>
  );
};

export default UserPage;
